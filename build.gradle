allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'java'
}

group = 'de.hglabor'
description = 'KitAPI for HGLabor'
version = '0.2.1'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = uri('https://papermc.io/repo/repository/maven-public/') }
    maven { url = uri('https://oss.sonatype.org/content/groups/public/') }
    maven { url = uri('http://maven.enginehub.org/repo/') }
    maven { url = uri('http://repo.md-5.net/content/groups/public/') }
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
    maven { url = uri('https://jitpack.io/') }
    // COMMAND API
    maven { url = "https://raw.githubusercontent.com/JorelAli/CommandAPI/mvn-repo/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    // COMMAND API
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

def ossrhName = hasProperty("ossrhUsername") ? ossrhUsername : "NAME";
def ossrhPw = hasProperty("ossrhPassword") ? ossrhPassword : "PW";

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: ossrhName,
                        password: ossrhPw)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: ossrhName,
                        password: ossrhPw)
            }

            pom.project {
                name 'kit-api'
                packaging 'jar'
                description "KitApi"
                url 'https://github.com/HGLabor/HGLaborKitAPI2.0/tree/main'

                scm {
                    connection "scm:git:git://github.com/HGLabor/HGLaborKitAPI2.0.git"
                    developerConnection "scm:git:ssh://github.com:HGLabor/HGLaborKitAPI2.0.git"
                    url "https://github.com/HGLabor/HGLaborKitAPI2.0"
                }

                developers {
                    developer {
                        id 'copyandexecute'
                    }
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

dependencies {
    compileOnly 'org.apache.commons:commons-lang3:3.11'
    compileOnly 'LibsDisguises:LibsDisguises:10.0.23'
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'org.bukkit:craftbukkit:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'de.hglabor:localization:0.0.6'
    compileOnly 'de.hglabor:hglabor-utils:0.0.5'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.0-SNAPSHOT'
    compileOnly 'dev.jorel:commandapi-shade:5.8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}
